#!/usr/bin/env bash

# Removes a worktree and closes the tmux window for a given branch.
#
# This script is idempotent and can safely be run multiple times.
#
# Usage:
#   worktree-rm <branch-name>
#
# Examples:
#   worktree-rm feature/auth

set -euo pipefail

# Requirement: must have one argument (branch name)
if [[ $# -eq 0 ]]; then
  echo "Error: Branch name is required" >&2
  echo "Usage: $(basename "$0") <branch-name> " >&2
  echo "Examples:" >&2
  echo "\t$(basename "$0") feature/auth" >&2
  exit 1
fi

# Requirement: branch name must not be empty
branch_name="$1"
if [[ -z "$branch_name" ]]; then
  echo "Error: Branch name cannot be empty" >&2
  exit 1
fi

# Requirement: must be in a git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "Error: Not in a git repository" >&2
  exit 1
fi

# Requirement: must be in the main git repository
if [[ "$(git rev-parse --git-common-dir 2>/dev/null)" != ".git" ]]; then
  echo "Error: This command must be run from the main git repository, not a worktree" >&2
  exit 1
fi

repo_root=$(git rev-parse --show-toplevel)
repo_name=$(basename "$repo_root")
session_name="${repo_name}-worktree"
window_name=$(echo "$branch_name" | sed 's/[^a-zA-Z0-9-]/-/g')
worktree_dir="$(dirname "$repo_root")/${repo_name}-worktree-${window_name}"

# Remove git worktree if it exists
if [[ -d "$worktree_dir" ]]; then
  echo "Removing worktree at: $worktree_dir"
  git worktree remove "$worktree_dir"
else
  echo "Worktree does not exist at: $worktree_dir"
fi

# Close tmux window if session and window exist
if tmux has-session -t "$session_name" 2>/dev/null; then
  echo "tmux session exists: $session_name"

  # Close tmux window if it exists (with or without notification)
  if tmux list-windows -t "$session_name" -F "#{window_name}" 2>/dev/null | grep -q "^$window_name$"; then
    echo "Closing tmux window: $window_name"
    tmux kill-window -t "$session_name:$window_name"
  elif tmux list-windows -t "$session_name" -F "#{window_name}" 2>/dev/null | grep -q "^ðŸ”” $window_name$"; then
    echo "Closing tmux window: $window_name"
    tmux kill-window -t "$session_name:ðŸ”” $window_name"
  else
    echo "tmux window does not exist: $window_name"
  fi
else
  echo "tmux session does not exist: $session_name"
fi
