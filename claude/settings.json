{
  "permissions": {
    "allow": [
      "Bash(cd:*)",
      "Bash(cut:*)",
      "Bash(diff:*)",
      "Bash(file:*)",
      "Bash(grep:*)",
      "Bash(jq:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(pwd:*)",
      "Bash(rg:*)",
      "Bash(sort:*)",
      "Bash(tr:*)",
      "Bash(type:*)",
      "Bash(uniq:*)",
      "Bash(which:*)",
      "Bash(wc:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr view:*)",
      "Bash(git add:*)",
      "Bash(git blame:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git status:*)",
      "Bash(safe-find:*)",
      "Bash(safe-gh-pr-create:*)",
      "Bash(safe-git-commit:*)",
      "Bash(safe-git-push:*)",
      "mcp__context7__get-library-docs",
      "mcp__context7__resolve-library-id"
    ],
    "deny": [
      "Bash(find:*)",
      "Bash(gh pr create:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)"
    ]
  },
  "model": "opusplan",
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -title 'Claude needs your attention' -message \"$PWD\" && afplay /System/Library/Sounds/Ping.aiff && worktree-notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -title 'Claude is done' -message \"$PWD\" && afplay /System/Library/Sounds/Glass.aiff && worktree-notify"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bunx ccusage statusline"
  }
}